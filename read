#!/bin/bash

process () {
  read width height <<<$(getImageDimensions "in/$1")
  dWidth=$(($backgroundWidth - $width))
  dHeight=$(($backgroundHeight - $height))
  if [ "$dWidth" -lt 0 ] || [ "$dHeight" -lt 0 ]
  then
    error "background file too small"
  fi
  convert \( -size "$width"x"$height" xc:black \) \
    \( "$background" \
      -chop $(random $(($dWidth + 1)))x$(random $(($dHeight + 1))) \) \
    \( "in/$1" $(level) \) -composite "out/$(echo $1 | sed 's/\///g')"
}

getImageDimensions () {
  echo $(identify -verbose "$1" | \
    sed -En 's/^  Geometry: ([0-9]+)x([0-9]+)\+0\+0$/\1 \2/p')
}

random () {
  echo $(( \
    $(dd if=/dev/urandom count=1 2> /dev/null | cksum | cut -f1 -d" ") % $1))
}

level () {
  if [[ -n "$gamma" ]]
  then
    echo "-level 0%,100%,$gamma"
  fi
}

error () {
  echo "error: $1" 1>&2
  exit 255
}

while getopts "g:" OPTION
do
  case $OPTION in
    g) gamma=$OPTARG ;;
    \?) error "usage error" ;;
  esac
done

if [ -f background.png ]
then
  background=background.png
fi

if [ -z "$background" ]
then
  error "no background file"
fi

if [ -z "${!OPTIND}" ]
then
  error "please specify input file"
fi

mkdir in out

unzip -d in "${!OPTIND}"

read backgroundWidth backgroundHeight <<<$(getImageDimensions "$background")

export background
export backgroundWidth
export backgroundHeight
export gamma

export -f process
export -f getImageDimensions
export -f random
export -f level
export -f error

find in -type f | sed 's/^in\///g;s/"/\\\"/g;s/\\/\\\\\\/g' | \
  xargs -I {} bash -c "process \"{}\""

if [ $(find in -type f | wc -l) -ne $(find out -type f | wc -l) ]
then
  error "number of ouput files does not match input files"
fi

rm -rf in out
